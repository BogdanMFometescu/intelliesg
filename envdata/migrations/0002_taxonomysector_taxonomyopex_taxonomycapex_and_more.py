# Generated by Django 5.0.1 on 2024-05-20 17:16

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('envdata', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaxonomySector',
            fields=[
                ('sector', models.CharField(choices=[('Accommodation activities', 'Accommodation activities'), ('Arts, entertainment and recreation', 'Arts, entertainment and recreation')], max_length=2000)),
                ('activity', models.CharField(choices=[('Transmission and distribution of electricity', 'Transmission and distribution of electricity')], max_length=2000)),
                ('nace_code', models.FloatField(default=0.0)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envdata.company')),
            ],
            options={
                'verbose_name': 'Taxonomy Sector',
                'verbose_name_plural': 'Taxonomy Sectors',
            },
        ),
        migrations.CreateModel(
            name='TaxonomyOpEx',
            fields=[
                ('currency', models.CharField(choices=[('EUR', 'EUR'), ('USD', 'USD'), ('RON', 'RON')], max_length=10)),
                ('opex', models.FloatField(default=0.0)),
                ('opex_a_activity', models.CharField(max_length=1000)),
                ('opex_a_amount', models.FloatField(default=0.0)),
                ('opex_b_activity', models.CharField(max_length=1000)),
                ('opex_b_amount', models.FloatField(default=0.0)),
                ('opex_c_activity', models.CharField(max_length=1000)),
                ('opex_c_amount', models.FloatField(default=0.0)),
                ('climate_change_mitigation', models.CharField(max_length=255)),
                ('climate_change_adaptation', models.CharField(max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envdata.company')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envdata.taxonomysector')),
            ],
        ),
        migrations.CreateModel(
            name='TaxonomyCapEx',
            fields=[
                ('currency', models.CharField(choices=[('EUR', 'EUR'), ('USD', 'USD'), ('RON', 'RON')], max_length=10)),
                ('capex', models.FloatField(default=0.0)),
                ('capex_a_activity', models.CharField(max_length=1000)),
                ('capex_a_amount', models.FloatField(default=0.0)),
                ('capex_b_activity', models.CharField(max_length=1000)),
                ('capex_b_amount', models.FloatField(default=0.0)),
                ('capex_c_activity', models.CharField(max_length=1000)),
                ('capex_c_amount', models.FloatField(default=0.0)),
                ('climate_change_mitigation', models.CharField(max_length=255)),
                ('climate_change_adaptation', models.CharField(max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envdata.company')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envdata.taxonomysector')),
            ],
        ),
        migrations.CreateModel(
            name='DoNotSeriousHarm',
            fields=[
                ('climate_change_turnover', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('climate_change_capex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('climate_change_opex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('marine_resources_turnover', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('marine_resources_capex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('marine_resources_opex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('circular_economy_turnover', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('circular_economy_capex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('circular_economy_opex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('pollution_turnover', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('pollution_capex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('pollution_opex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('biodiversity_turnover', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('biodiversity_capex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('biodiversity_opex', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envdata.company')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envdata.taxonomysector')),
            ],
        ),
        migrations.CreateModel(
            name='TaxonomyTurnover',
            fields=[
                ('currency', models.CharField(choices=[('EUR', 'EUR'), ('USD', 'USD'), ('RON', 'RON')], max_length=10)),
                ('turnover', models.FloatField(default=0.0)),
                ('eligible_activity', models.CharField(max_length=1000)),
                ('eligible_activity_amount', models.FloatField(default=0.0)),
                ('aligned_activity', models.CharField(max_length=1000)),
                ('aligned_activity_amount', models.FloatField(default=0.0)),
                ('not_aligned_activity', models.CharField(max_length=1000)),
                ('not_aligned_activity_amount', models.FloatField(default=0.0)),
                ('climate_change_mitigation', models.CharField(max_length=255)),
                ('climate_change_adaptation', models.CharField(max_length=255)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envdata.company')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envdata.taxonomysector')),
            ],
        ),
    ]
